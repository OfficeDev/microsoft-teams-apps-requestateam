{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceGroupName": {
            "defaultValue": "",
            "type": "string"
        },
        "subscriptionId": {
            "defaultValue": "",
            "type": "string"
        },
        "automationAccountName": {
            "defaultValue": "",
            "type": "string"
        },
        "appId": {
            "defaultValue": "",
            "type": "string"
        },
        "appSecret": {
            "defaultValue": "",
            "type": "string"
        },
        "tenantId": {
            "defaultValue": "",
            "type": "string"
        },
        "location": {
            "defaultvalue": "",
            "type": "string"
        },
        "requestsSiteUrl": {
            "defaultvalue": "",
            "type": "string"
        },
        "requestsListId": {
            "defaultvalue": "",
            "type": "string"
        },
            "templatesListId": {
            "defaultvalue": "",
            "type": "string"
        },
        "serviceAccountUPN": {
            "defaultValue": "",
            "type": "string"
        }
    },
    "variables": {
        "Singlequote": "'"
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "ProcessTeamRequest",
            "location": "[parameters('location')]",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {
                            },
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_an_item_is_created_or_modified": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 1
                            },
                            "splitOn": "@triggerBody()?['value']",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(',variables('singlequote'),parameters('requestsSiteUrl'),variables('singlequote'),'))}/tables/@{encodeURIComponent(encodeURIComponent(',variables('singlequote'),parameters('requestsListId'),variables('singlequote'),'))}/onupdateditems')]"
                            },
                            "conditions": [
                                {
                                    "expression": "@equals(triggerBody()?['Status']?['Value'],'Approved')"
                                }
                            ]
                        }
                    },
                    "actions": {
                             "Append_service_account_to_Owners_variable": {
                            "runAfter": {
                                "Get_service_account_user_profile": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToArrayVariable",
                            "inputs": {
                                "name": "Owners",
                                "value": "https://graph.microsoft.com/v1.0/users/@{body('Get_service_account_user_profile')?['id']}"
                            }
                        },
                        "Check_if_SharePoint_site_exists": {
                            "actions": {
                                "Check_SiteExists_value": {
                                    "actions": {
                                        "Check_SiteExists_value_-_Deleted_group": {
                                            "actions": {
                                                "Terminate_-_Group_exists_in_recycle_in": {
                                                    "runAfter": {
                                                        "Update_status_to_creation_failed_-_Deleted_group": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Terminate",
                                                    "inputs": {
                                                        "runError": {
                                                            "message": "Group exists in deleted groups."
                                                        },
                                                        "runStatus": "Failed"
                                                    },
                                                    "description": "Terminate the Logic App as the Group was found in the recycle bin. Group/Team creation will fail otherwise."
                                                },
                                                "Update_status_to_creation_failed_-_Deleted_group": {
                                                    "runAfter": {
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Status": {
                                                                "Value": "Team Creation Failed"
                                                            },
                                                            "StatusReason": "Team exists in deleted groups.",
                                                            "Title": "@triggerBody()?['Title']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                                            }
                                                        },
                                                        "method": "patch",
                                                        "path": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(',variables('singlequote'),parameters('requestsSiteUrl'),variables('singlequote'),'))}/tables/@{encodeURIComponent(encodeURIComponent(',variables('singlequote'),parameters('requestsListId'),variables('singlequote'),'))}/items/@{encodeURIComponent(triggerBody()?[',variables('singlequote'),'ID',variables('singlequote'),'])}')]"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Loop_through_deleted_groups": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@variables('SiteExists')",
                                                            "@true"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Get_deleted_groups": {
                                            "runAfter": {
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                                     "clientId": "@body('Get_Client_ID')?['value']",
                                                    "secret": "@body('Get_Client_Secret')?['value']",
                                                    "tenant": "@variables('TenantID')",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "method": "GET",
                                                "uri": "@{variables('GraphURL')}/directory/deleteditems/microsoft.graph.group"
                                            }
                                        },
                                        "Loop_through_deleted_groups": {
                                            "foreach": "@body('Parse_deleted_groups_JSON')?['value']",
                                            "actions": {
                                                "Check_for_deleted_group": {
                                                    "actions": {
                                                        "Set_SiteExists_variable_-_Deleted_group": {
                                                            "runAfter": {
                                                            },
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "SiteExists",
                                                                "value": "@bool('true')"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@toLower(items('Loop_through_deleted_groups')?['mailNickname'])",
                                                                    "@toLower(triggerBody()?['TeamAlias'])"
                                                                ]
                                                            },
                                                            {
                                                                "equals": [
                                                                    "@toLower(items('Loop_through_deleted_groups')?['displayName'])",
                                                                    "@toLower(triggerBody()?['Title'])"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If",
                                                    "description": "Check if the request matches a deleted group."
                                                }
                                            },
                                            "runAfter": {
                                                "Parse_deleted_groups_JSON": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "Parse_deleted_groups_JSON": {
                                            "runAfter": {
                                                "Get_deleted_groups": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Get_deleted_groups')",
                                                "schema": {
                                                    "properties": {
                                                        "@@odata.context": {
                                                            "type": "string"
                                                        },
                                                        "@@odata.nextLink": {
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "items": {
                                                                "properties": {
                                                                    "classification": {
                                                                    },
                                                                    "createdDateTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "creationOptions": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": [
                                                                            "array",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "deletedDateTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "displayName": {
                                                                        "type": "string"
                                                                    },
                                                                    "groupTypes": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "isAssignableToRole": {
                                                                    },
                                                                    "mail": {
                                                                        "type": "string"
                                                                    },
                                                                    "mailEnabled": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "mailNickname": {
                                                                        "type": "string"
                                                                    },
                                                                    "onPremisesLastSyncDateTime": {
                                                                    },
                                                                    "onPremisesProvisioningErrors": {
                                                                        "type": "array"
                                                                    },
                                                                    "onPremisesSecurityIdentifier": {
                                                                    },
                                                                    "onPremisesSyncEnabled": {
                                                                    },
                                                                    "preferredDataLocation": {
                                                                    },
                                                                    "proxyAddresses": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "renewedDateTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "resourceBehaviorOptions": {
                                                                        "type": "array"
                                                                    },
                                                                    "resourceProvisioningOptions": {
                                                                        "type": "array"
                                                                    },
                                                                    "securityEnabled": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "visibility": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "id",
                                                                    "deletedDateTime",
                                                                    "classification",
                                                                    "createdDateTime",
                                                                    "description",
                                                                    "displayName",
                                                                    "groupTypes",
                                                                    "isAssignableToRole",
                                                                    "mail",
                                                                    "mailEnabled",
                                                                    "mailNickname",
                                                                    "onPremisesLastSyncDateTime",
                                                                    "onPremisesSecurityIdentifier",
                                                                    "onPremisesSyncEnabled",
                                                                    "preferredDataLocation",
                                                                    "proxyAddresses",
                                                                    "renewedDateTime",
                                                                    "resourceBehaviorOptions",
                                                                    "resourceProvisioningOptions",
                                                                    "securityEnabled",
                                                                    "visibility",
                                                                    "onPremisesProvisioningErrors"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_SiteExists_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Terminate_-_Site_exists": {
                                                "runAfter": {
                                                    "Update_status_to_creation_failed_-_Team_SP_site_exists": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Terminate",
                                                "inputs": {
                                                    "runError": {
                                                        "message": "Team already exists"
                                                    },
                                                    "runStatus": "Failed"
                                                }
                                            },
                                            "Update_status_to_creation_failed_-_Team_SP_site_exists": {
                                                "runAfter": {
                                                },
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": {
                                                        "Status": {
                                                            "Value": "Team Creation Failed"
                                                        },
                                                        "StatusReason": "Team already exists.",
                                                        "Title": "@triggerBody()?['Title']"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                                        }
                                                    },
                                                    "method": "patch",
                                                    "path": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(',variables('singlequote'),parameters('requestsSiteUrl'),variables('singlequote'),'))}/tables/@{encodeURIComponent(encodeURIComponent(',variables('singlequote'),parameters('requestsListId'),variables('singlequote'),'))}/items/@{encodeURIComponent(triggerBody()?[',variables('singlequote'),'ID',variables('singlequote'),'])}')]"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@variables('SiteExists')",
                                                    "@false"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Create_job_to_check_if_site_exists": {
                                    "runAfter": {
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "properties": {
                                                "parameters": {
                                                    "SiteUrl": "@triggerBody()?['SharePointSiteURL']"
                                                }
                                            }
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "path": "[concat('/subscriptions/@{encodeURIComponent(''',parameters('subscriptionId'),''')}/resourceGroups/@{encodeURIComponent(''',parameters('resourceGroupName'),''')}/providers/Microsoft.Automation/automationAccounts/@{encodeURIComponent(''',parameters('automationAccountName'),''')}/jobs')]",
                                        "queries": {
                                            "runbookName": "CheckSiteExists",
                                            "wait": true,
                                            "x-ms-api-version": "2015-10-31"
                                        }
                                    }
                                },
                                "Get_site_exists_job_output": {
                                    "runAfter": {
                                        "Create_job_to_check_if_site_exists": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "[concat('/subscriptions/@{encodeURIComponent(''',parameters('subscriptionId'),''')}/resourceGroups/@{encodeURIComponent(''',parameters('resourceGroupName'),''')}/providers/Microsoft.Automation/automationAccounts/@{encodeURIComponent(''',parameters('automationAccountName'),''')}/jobs/@{encodeURIComponent(body(''Create_job_to_check_if_site_exists'')?[''properties'']?[''jobId''])}/output')]",
                                        "queries": {
                                            "x-ms-api-version": "2015-10-31"
                                        }
                                    }
                                },
                                "Set_SiteExists_variable": {
                                    "runAfter": {
                                        "Get_site_exists_job_output": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "SiteExists",
                                        "value": "@bool(body('Get_site_exists_job_output'))"
                                    }
                                }
                            },
                           "runAfter": {
                                "Append_service_account_to_Owners_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope",
                            "description": "Check if the SharePoint site backing the team exists. Creating a team with the same backing URL will fail."
                        },
                        "Create_team": {
                            "actions": {
                                "Check_TeamsTemplateOperation": {
                                    "actions": {
                                        "Add_Members_and_Owners": {
                                            "actions": {
                                                "Get_team_owners": {
                                                    "runAfter": {
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                                "clientId": "@body('Get_Client_ID')?['value']",
                                                            "secret": "@body('Get_Client_Secret')?['value']",
                                                            "tenant": "@variables('TenantID')",
                                                            "type": "ActiveDirectoryOAuth"
                                                        },
                                                        "headers": {
                                                            "content-type": "application/json"
                                                        },
                                                        "method": "GET",
                                                        "uri": "@{variables('GraphURL')}/groups/@{body('Parse_created_team_JSON')?['id']}/owners"
                                                    }
                                                },
                                                "Loop_through_Members_array": {
                                                    "foreach": "@variables('Members')",
                                                    "actions": {
                                                        "Check_if_member_does_not_already_exist_as_an_owner": {
                                                            "actions": {
                                                                "Add_member_to_team": {
                                                                    "runAfter": {
                                                                    },
                                                                    "type": "Http",
                                                                    "inputs": {
                                                                        "authentication": {
                                                                            "audience": "https://graph.microsoft.com",
                                                                             "clientId": "@body('Get_Client_ID')?['value']",
                                                                            "secret": "@body('Get_Client_Secret')?['value']",
                                                                            "tenant": "@variables('TenantID')",
                                                                            "type": "ActiveDirectoryOAuth"
                                                                        },
                                                                        "body": {
                                                                            "@@odata.id": "@items('Loop_through_Members_array')"
                                                                        },
                                                                        "headers": {
                                                                            "content-type": "application/json"
                                                                        },
                                                                        "method": "POST",
                                                                        "uri": "@{variables('GraphURL')}/groups/@{body('Parse_created_team_JSON')?['id']}/members/$ref"
                                                                    }
                                                                },
                                                                "Delay_while_member_is_added": {
                                                                    "runAfter": {
                                                                        "Add_member_to_team": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Wait",
                                                                    "inputs": {
                                                                        "interval": {
                                                                            "count": 1,
                                                                            "unit": "Minute"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Get_member_id": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "not": {
                                                                            "contains": [
                                                                                "@string(body('Get_team_owners'))",
                                                                                "@outputs('Get_member_id')"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If",
                                                            "description": "Check if member is not added to the team at this stage or this will fail."
                                                        },
                                                        "Get_member_id": {
                                                            "runAfter": {
                                                            },
                                                            "type": "Compose",
                                                            "inputs": "@replace(substring(items('Loop_through_members_array'),lastIndexOf(items('Loop_through_members_array'),'/'),sub(length(items('Loop_through_members_array')),lastIndexOf(items('Loop_through_members_array'),'/'))),'/','')"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Parse_team_owners_JSON": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach",
                                                    "runtimeConfiguration": {
                                                        "concurrency": {
                                                            "repetitions": 1
                                                        }
                                                    }
                                                },
                                                "Loop_through_Owners_-_add_to_team": {
                                                    "foreach": "@variables('Owners')",
                                                    "actions": {
                                                        "Check_if_owner_does_not_already_exist_in_the_team": {
                                                            "actions": {
                                                                "Add_owner_to_team": {
                                                                    "runAfter": {
                                                                    },
                                                                    "type": "Http",
                                                                    "inputs": {
                                                                        "authentication": {
                                                                            "audience": "https://graph.microsoft.com",
                                                                          "clientId": "@body('Get_Client_ID')?['value']",
                                                                            "secret": "@body('Get_Client_Secret')?['value']",
                                                                            "tenant": "@variables('TenantID')",
                                                                            "type": "ActiveDirectoryOAuth"
                                                                        },
                                                                        "body": {
                                                                            "@@odata.id": "https://graph.microsoft.com/v1.0/users/@{outputs('Get_owner_id')}"
                                                                        },
                                                                        "headers": {
                                                                            "content-type": "application/json"
                                                                        },
                                                                        "method": "POST",
                                                                        "uri": "@{variables('GraphURL')}/groups/@{body('Parse_created_team_JSON')?['id']}/owners/$ref"
                                                                    }
                                                                },
                                                                "Delay_while_owner_is_added": {
                                                                    "runAfter": {
                                                                        "Add_owner_to_team": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Wait",
                                                                    "inputs": {
                                                                        "interval": {
                                                                            "count": 1,
                                                                            "unit": "Minute"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Get_owner_id": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "not": {
                                                                            "contains": [
                                                                                "@string(body('Get_team_owners'))",
                                                                                "@outputs('Get_owner_id')"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "Get_owner_id": {
                                                            "runAfter": {
                                                            },
                                                            "type": "Compose",
                                                            "inputs": "@replace(substring(items('Loop_through_owners_-_add_to_team'),lastIndexOf(items('Loop_through_owners_-_add_to_team'),'/'),sub(length(items('Loop_through_owners_-_add_to_team')),lastIndexOf(items('Loop_through_owners_-_add_to_team'),'/'))),'/','')"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Loop_through_Members_array": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach",
                                                    "runtimeConfiguration": {
                                                        "concurrency": {
                                                            "repetitions": 1
                                                        }
                                                    }
                                                },
                                                "Parse_team_owners_JSON": {
                                                    "runAfter": {
                                                        "Get_team_owners": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@body('Get_team_owners')",
                                                        "schema": {
                                                            "properties": {
                                                                "@@odata.context": {
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "@@odata.type": {
                                                                                "type": "string"
                                                                            },
                                                                            "accountEnabled": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "ageGroup": {
                                                                            },
                                                                            "assignedLicenses": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "disabledPlans": {
                                                                                            "type": "array"
                                                                                        },
                                                                                        "skuId": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "disabledPlans",
                                                                                        "skuId"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "assignedPlans": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "assignedDateTime": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "capabilityStatus": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "service": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "servicePlanId": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "assignedDateTime",
                                                                                        "capabilityStatus",
                                                                                        "service",
                                                                                        "servicePlanId"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "businessPhones": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "city": {
                                                                            },
                                                                            "companyName": {
                                                                            },
                                                                            "consentProvidedForMinor": {
                                                                            },
                                                                            "country": {
                                                                                "type": [
                                                                                    "string",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "createdDateTime": {
                                                                                "type": "string"
                                                                            },
                                                                            "creationType": {
                                                                            },
                                                                            "deletedDateTime": {
                                                                            },
                                                                            "department": {
                                                                            },
                                                                            "deviceKeys": {
                                                                                "type": "array"
                                                                            },
                                                                            "displayName": {
                                                                                "type": "string"
                                                                            },
                                                                            "employeeId": {
                                                                            },
                                                                            "externalUserState": {
                                                                            },
                                                                            "externalUserStateChangeDateTime": {
                                                                            },
                                                                            "faxNumber": {
                                                                            },
                                                                            "givenName": {
                                                                                 "type": [
                                                                                    "string",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "id": {
                                                                                "type": "string"
                                                                            },
                                                                            "identities": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "issuer": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "issuerAssignedId": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "signInType": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "signInType",
                                                                                        "issuer",
                                                                                        "issuerAssignedId"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "imAddresses": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "isResourceAccount": {
                                                                            },
                                                                            "jobTitle": {
                                                                            },
                                                                            "legalAgeGroupClassification": {
                                                                            },
                                                                            "mail": {
                                                                                "type": "string"
                                                                            },
                                                                            "mailNickname": {
                                                                                "type": "string"
                                                                            },
                                                                            "mobilePhone": {
                                                                                "type": [
                                                                                    "string",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "officeLocation": {
                                                                            },
                                                                            "onPremisesDistinguishedName": {
                                                                            },
                                                                            "onPremisesDomainName": {
                                                                            },
                                                                            "onPremisesExtensionAttributes": {
                                                                                "properties": {
                                                                                    "extensionAttribute1": {
                                                                                    },
                                                                                    "extensionAttribute10": {
                                                                                    },
                                                                                    "extensionAttribute11": {
                                                                                    },
                                                                                    "extensionAttribute12": {
                                                                                    },
                                                                                    "extensionAttribute13": {
                                                                                    },
                                                                                    "extensionAttribute14": {
                                                                                    },
                                                                                    "extensionAttribute15": {
                                                                                    },
                                                                                    "extensionAttribute2": {
                                                                                    },
                                                                                    "extensionAttribute3": {
                                                                                    },
                                                                                    "extensionAttribute4": {
                                                                                    },
                                                                                    "extensionAttribute5": {
                                                                                    },
                                                                                    "extensionAttribute6": {
                                                                                    },
                                                                                    "extensionAttribute7": {
                                                                                    },
                                                                                    "extensionAttribute8": {
                                                                                    },
                                                                                    "extensionAttribute9": {
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "onPremisesImmutableId": {
                                                                            },
                                                                            "onPremisesLastSyncDateTime": {
                                                                            },
                                                                            "onPremisesProvisioningErrors": {
                                                                                "type": "array"
                                                                            },
                                                                            "onPremisesSamAccountName": {
                                                                            },
                                                                            "onPremisesSecurityIdentifier": {
                                                                            },
                                                                            "onPremisesSyncEnabled": {
                                                                            },
                                                                            "onPremisesUserPrincipalName": {
                                                                            },
                                                                            "otherMails": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "passwordPolicies": {
                                                                            },
                                                                            "passwordProfile": {
                                                                            },
                                                                            "postalCode": {
                                                                            },
                                                                            "preferredDataLocation": {
                                                                            },
                                                                            "preferredLanguage": {
                                                                              "type": [
                                                                                "string",
                                                                                "null" 

                                                                              ]
                                                                            },
                                                                            "provisionedPlans": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "capabilityStatus": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "provisioningStatus": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "service": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "capabilityStatus",
                                                                                        "provisioningStatus",
                                                                                        "service"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "proxyAddresses": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "refreshTokensValidFromDateTime": {
                                                                                "type": "string"
                                                                            },
                                                                            "showInAddressList": {
                                                                            },
                                                                            "signInSessionsValidFromDateTime": {
                                                                                "type": "string"
                                                                            },
                                                                            "state": {
                                                                            },
                                                                            "streetAddress": {
                                                                            },
                                                                            "surname": {
                                                                                "type": "string"
                                                                            },
                                                                            "usageLocation": {
                                                                                "type": "string"
                                                                            },
                                                                            "userPrincipalName": {
                                                                                "type": "string"
                                                                            },
                                                                            "userType": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "@@odata.type",
                                                                            "id"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "Remove_template_team_owners": {
                                                    "actions": {
                                                        "Loop_through_template_team_owners": {
                                                            "foreach": "@body('Parse_team_owners_JSON')?['value']",
                                                            "actions": {
                                                                "Check_if_template_team_owner_was_not_found_in_specified_owners": {
                                                                    "actions": {
                                                                        "Remove_template_team_owner_from_team": {
                                                                            "runAfter": {
                                                                            },
                                                                            "type": "Http",
                                                                            "inputs": {
                                                                                "authentication": {
                                                                                    "audience": "https://graph.microsoft.com",
                                                                                     "clientId": "@body('Get_Client_ID')?['value']",
                                                                                    "secret": "@body('Get_Client_Secret')?['value']",
                                                                                    "tenant": "@variables('TenantID')",
                                                                                    "type": "ActiveDirectoryOAuth"
                                                                                },
                                                                                "headers": {
                                                                                    "content-type": "application/json"
                                                                                },
                                                                                "method": "DELETE",
                                                                                "uri": "@{variables('GraphURL')}/groups/@{body('Parse_created_team_JSON')?['id']}/owners/@{items('Loop_through_template_team_owners')?['id']}/$ref"
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "not": {
                                                                                    "contains": [
                                                                                        "@string(variables('Owners'))",
                                                                                        "@items('Loop_through_template_team_owners')?['id']"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                }
                                                            },
                                                            "runAfter": {
                                                            },
                                                            "type": "Foreach"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Loop_through_Owners_-_add_to_team": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Scope",
                                                    "description": "When cloning teams, the owners of the source team will be cloned. We need to remove these owners."
                                                }
                                            },
                                            "runAfter": {
                                                "Parse_created_team_JSON": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Scope"
                                        },
                                        "Get_create_team_operation": {
                                            "runAfter": {
                                                "Wait_for_team_to_provision": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                          "clientId": "@body('Get_Client_ID')?['value']",
                                                    "secret": "@body('Get_Client_Secret')?['value']",
                                                    "tenant": "@variables('TenantID')",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "headers": {
                                                    "content-type": "application/json"
                                                },
                                                "method": "GET",
                                                "uri": "@{variables('GraphURL')}@{body('Parse_create_team_JSON')?['Location']}"
                                            }
                                        },
                                        "Get_created_team": {
                                            "runAfter": {
                                                "Parse_team_operation_JSON": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                                       "clientId": "@body('Get_Client_ID')?['value']",
                                                    "secret": "@body('Get_Client_Secret')?['value']",
                                                    "tenant": "@variables('TenantID')",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "headers": {
                                                    "content-type": "application/json"
                                                },
                                                "method": "GET",
                                                "uri": "@{variables('GraphURL')}/teams/@{body('Parse_team_operation_JSON')?['targetResourceId']}"
                                            }
                                        },
                                        "Parse_create_team_JSON": {
                                            "runAfter": {},
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@if(equals(variables('TeamsTemplateOperation'),'template'),outputs('Provision_Team_from_template')['headers'],outputs('Clone_team')['headers'])",
                                                "schema": {
                                                    "properties": {
                                                        "Cache-Control": {
                                                            "type": "string"
                                                        },
                                                        "Content-Length": {
                                                            "type": "string"
                                                        },
                                                        "Content-Type": {
                                                            "type": "string"
                                                        },
                                                        "Date": {
                                                            "type": "string"
                                                        },
                                                        "Location": {
                                                            "type": "string"
                                                        },
                                                        "Strict-Transport-Security": {
                                                            "type": "string"
                                                        },
                                                        "client-request-id": {
                                                            "type": "string"
                                                        },
                                                        "request-id": {
                                                            "type": "string"
                                                        },
                                                        "x-ms-ags-diagnostic": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "description": "Ought to check template operation is also equal to clone and handle if empty."
                                        },
                                        "Parse_created_team_JSON": {
                                            "runAfter": {
                                                "Get_created_team": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Get_created_team')",
                                                "schema": {
                                                    "properties": {
                                                        "@@odata.context": {
                                                            "type": "string"
                                                        },
                                                        "classification": {
                                                        },
                                                        "description": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "discoverySettings": {
                                                            "properties": {
                                                                "showInTeamsSearchAndSuggestions": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "displayName": {
                                                            "type": "string"
                                                        },
                                                        "funSettings": {
                                                            "properties": {
                                                                "allowCustomMemes": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowGiphy": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowStickersAndMemes": {
                                                                    "type": "boolean"
                                                                },
                                                                "giphyContentRating": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "guestSettings": {
                                                            "properties": {
                                                                "allowCreateUpdateChannels": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowDeleteChannels": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "internalId": {
                                                            "type": "string"
                                                        },
                                                        "isArchived": {
                                                            "type": "boolean"
                                                        },
                                                        "memberSettings": {
                                                            "properties": {
                                                                "allowAddRemoveApps": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowCreatePrivateChannels": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowCreateUpdateChannels": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowCreateUpdateRemoveConnectors": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowCreateUpdateRemoveTabs": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowDeleteChannels": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "messagingSettings": {
                                                            "properties": {
                                                                "allowChannelMentions": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowOwnerDeleteMessages": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowTeamMentions": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowUserDeleteMessages": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowUserEditMessages": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "specialization": {
                                                        },
                                                        "visibility": {
                                                        },
                                                        "webUrl": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Parse_team_operation_JSON": {
                                            "runAfter": {
                                                "Get_create_team_operation": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Get_create_team_operation')",
                                                "schema": {
                                                    "properties": {
                                                        "@@odata.context": {
                                                            "type": "string"
                                                        },
                                                        "Value": {
                                                            "type": "string"
                                                        },
                                                        "attemptsCount": {
                                                            "type": "integer"
                                                        },
                                                        "createdDateTime": {
                                                            "type": "string"
                                                        },
                                                        "error": {
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "lastActionDateTime": {
                                                            "type": "string"
                                                        },
                                                        "operationType": {
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "type": "string"
                                                        },
                                                        "targetResourceId": {
                                                            "type": "string"
                                                        },
                                                        "targetResourceLocation": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Wait_for_team_to_provision": {
                                            "runAfter": {
                                                "Parse_create_team_JSON": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Wait",
                                            "inputs": {
                                                "interval": {
                                                    "count": 2,
                                                    "unit": "Minute"
                                                }
                                            },
                                            "description": "Need to add a GET query to graph here to check team provisioning was successful."
                                        }
                                    },
                                       "runAfter": {
                                        "Check_template_type": [
                                            "Succeeded"
                                        ]
                                    },
                                       "expression": {
                                        "or": [
                                            {
                                                "equals": [
                                                    "@variables('TeamsTemplateOperation')",
                                                    "template"
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@variables('TeamsTemplateOperation')",
                                                    "clone"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Check_template_type": {
                                    "actions": {
                                                                         "Check_for_members": {
                                            "actions": {
                                                "Set_MembersRequestBody_variable": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "MembersRequestBody",
                                                        "value": "{\n  \"displayName\": \"@{triggerBody()?['Title']}\",\n\"description\":\"@{triggerBody()?['TeamDescription']}\",\n  \"groupTypes\": [\n    \"Unified\"\n  ],\n  \"mailEnabled\": true,\n  \"mailNickname\": \"@{triggerBody()?['TeamAlias']}\",\n  \"members@odata.bind\": @{variables('Members')},\n  \"owners@odata.bind\": @{variables('Owners')},\n  \"securityEnabled\": false,\n\"visibility\":\"@{triggerBody()?['Visibility']?['Value']}\",\n\"classification\": @{if(empty(triggerBody()?['Classification']),'null',concat('\"',triggerBody()?['Classification'],'\"'))}\n}"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "else": {
                                                "actions": {
                                                    "Set_MembersRequestBody_variable_-_no_members": {
                                                        "runAfter": {},
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "MembersRequestBody",
                                                            "value": "{\n  \"displayName\": \"@{triggerBody()?['Title']}\",\n\"description\":\"@{triggerBody()?['TeamDescription']}\",\n  \"groupTypes\": [\n    \"Unified\"\n  ],\n  \"mailEnabled\": true,\n  \"mailNickname\": \"@{triggerBody()?['TeamAlias']}\",\n  \"owners@odata.bind\": @{variables('Owners')},\n  \"securityEnabled\": false,\n\"visibility\":\"@{triggerBody()?['Visibility']?['Value']}\",\n\"classification\": @{if(empty(triggerBody()?['Classification']),'null',concat('\\\"',triggerBody()?['Classification'],'\\\"'))}\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@empty(variables('Members'))",
                                                            "@false"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If",
                                            "description": "Check if members were specified when the request was created. Need to pass a different body to the graph call if there are no members."
                                        },
                                        "Check_template": {
                                            "actions": {
                                                                     "Create_group": {
                                            "runAfter": {
                                                "Set_TeamsTemplateOperation_variable_-_standard": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                              "clientId": "@body('Get_Client_ID')?['value']",
                                                            "secret": "@body('Get_Client_Secret')?['value']",
                                                    "tenant": "@variables('TenantID')",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "body": "@variables('MembersRequestBody')",
                                                "headers": {
                                                    "content-type": "application/json"
                                                },
                                                "method": "POST",
                                                "uri": "@{variables('GraphURL')}/groups"
                                            },
                                            "description": "V1.0 of Graph API requires that we create a group first then add a team to it."
                                        },
                                                                                "Parse_group_JSON": {
                                            "runAfter": {
                                                "Wait_for_group_to_provision": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Create_group')",
                                                "schema": {
                                                    "properties": {
                                                        "@@odata.context": {
                                                            "type": "string"
                                                        },
                                                        "classification": {},
                                                        "createdDateTime": {
                                                            "type": "string"
                                                        },
                                                        "creationOptions": {
                                                            "type": "array"
                                                        },
                                                        "deletedDateTime": {},
                                                        "description": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "displayName": {
                                                            "type": "string"
                                                        },
                                                        "groupTypes": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "mail": {
                                                            "type": "string"
                                                        },
                                                        "mailEnabled": {
                                                            "type": "boolean"
                                                        },
                                                        "mailNickname": {
                                                            "type": "string"
                                                        },
                                                        "onPremisesLastSyncDateTime": {},
                                                        "onPremisesProvisioningErrors": {
                                                            "type": "array"
                                                        },
                                                        "onPremisesSecurityIdentifier": {},
                                                        "onPremisesSyncEnabled": {},
                                                        "preferredDataLocation": {},
                                                        "proxyAddresses": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "renewedDateTime": {
                                                            "type": "string"
                                                        },
                                                        "resourceBehaviorOptions": {
                                                            "type": "array"
                                                        },
                                                        "resourceProvisioningOptions": {
                                                            "type": "array"
                                                        },
                                                        "securityEnabled": {
                                                            "type": "boolean"
                                                        },
                                                        "visibility": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Parse_teamify_JSON": {
                                            "runAfter": {
                                                "Teamify_group": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Teamify_group')",
                                                "schema": {
                                                    "properties": {
                                                        "@@odata.context": {
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "type": "string"
                                                        },
                                                        "discoverySettings": {},
                                                        "displayName": {
                                                            "type": "string"
                                                        },
                                                        "funSettings": {
                                                            "properties": {
                                                                "allowCustomMemes": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowGiphy": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowStickersAndMemes": {
                                                                    "type": "boolean"
                                                                },
                                                                "giphyContentRating": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "guestSettings": {
                                                            "properties": {
                                                                "allowCreateUpdateChannels": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowDeleteChannels": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "internalId": {
                                                            "type": "string"
                                                        },
                                                        "isArchived": {},
                                                        "memberSettings": {
                                                            "properties": {
                                                                "allowAddRemoveApps": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowCreateUpdateChannels": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowCreateUpdateRemoveConnectors": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowCreateUpdateRemoveTabs": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowDeleteChannels": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "messagingSettings": {
                                                            "properties": {
                                                                "allowChannelMentions": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowOwnerDeleteMessages": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowTeamMentions": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowUserDeleteMessages": {
                                                                    "type": "boolean"
                                                                },
                                                                "allowUserEditMessages": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "webUrl": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                                 "Set_TeamsTemplateOperation_variable_-_standard": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "TeamsTemplateOperation",
                                                        "value": "standard"
                                                    }
                                                },
                                                                  "Teamify_group": {
                                            "runAfter": {
                                                "Parse_group_JSON": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                                    "clientId": "@body('Get_Client_ID')?['value']",
                                                            "secret": "@body('Get_Client_Secret')?['value']",
                                                    "tenant": "@variables('TenantID')",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "body": {
                                                    "funSettings": {
                                                        "allowGiphy": true,
                                                        "giphyContentRating": "strict"
                                                    },
                                                    "memberSettings": {
                                                        "allowCreateUpdateChannels": true
                                                    },
                                                    "messagingSettings": {
                                                        "allowUserDeleteMessages": true,
                                                        "allowUserEditMessages": true
                                                    }
                                                },
                                                "headers": {
                                                    "content-type": "application/json"
                                                },
                                                "method": "PUT",
                                                "uri": "@{variables('GraphURL')}/groups/@{body('Parse_group_JSON')?['id']}/team"
                                            }
                                        },
                                              "Wait_for_group_to_provision": {
                                            "runAfter": {
                                                "Create_group": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Wait",
                                            "inputs": {
                                                "interval": {
                                                    "count": 3,
                                                    "unit": "Minute"
                                                }
                                            }
                                              }
                                        },
                                           "runAfter": {
                                                "Check_for_members": [
                                                    "Succeeded"
                                                ]
                                            },
                                                              "else": {
                                                "actions": {
                                                    "Get_teams_template": {
                                                        "runAfter": {
                                                            "Set_TeamsTemplateOperation_variable_-_from_template": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                                                }
                                                            },
                                                            "method": "get",
                                                    "path": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(',variables('singlequote'),parameters('requestsSiteUrl'),variables('singlequote'),'))}/tables/@{encodeURIComponent(encodeURIComponent(',variables('singlequote'),parameters('templatesListId'),variables('singlequote'),'))}/items')]",
                                                            "queries": {
                                                                "$filter": "Title eq '@{triggerBody()?['TemplateTitle']}'"
                                                            }
                                                        }
                                                    },
                                                    "Loop_through_teams_templates": {
                                                        "foreach": "@body('Get_teams_template')?['value']",
                                                        "actions": {
                                                            "Set_TemplateVisibility_variable": {
                                                                "runAfter": {},
                                                                "type": "SetVariable",
                                                                "inputs": {
                                                                    "name": "TemplateVisibility",
                                                                    "value": "@{if(empty(items('Loop_through_teams_templates')?['TeamVisibility']),triggerBody()?['Visibility']?['Value'],items('Loop_through_teams_templates')?['TeamVisibility'])}"
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {
                                                            "Get_teams_template": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Foreach"
                                                    },
                                                    "Provision_Team_from_template": {
                                                        "runAfter": {
                                                            "Loop_through_teams_templates": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Http",
                                                        "inputs": {
                                                            "authentication": {
                                                                "audience": "https://graph.microsoft.com",
                                                                "clientId": "@body('Get_Client_ID')?['value']",
                                                                "secret": "@body('Get_Client_Secret')?['value']",
                                                                "tenant": "@variables('TenantID')",
                                                                "type": "ActiveDirectoryOAuth"
                                                            },
                                                            "body": {
                                                                "classification": "@if(empty(triggerBody()?['Classification']),null,triggerBody()?['Classification'])",
                                                                "description": "@{triggerBody()?['TeamDescription']}",
                                                                "displayName": "@{triggerBody()?['Title']}",
                                                                "owners@odata.bind": [
                                                                   "@{first(variables('Owners'))}"
                                                                ],
                                                                "template@odata.bind": "https://graph.microsoft.com/beta/teamsTemplates('@{triggerBody()?['TemplateId']}')",
                                                                "visibility": "@{variables('TemplateVisibility')}"
                                                            },
                                                            "headers": {
                                                                "content-type": "application/json"
                                                            },
                                                            "method": "POST",
                                                            "uri": "@{variables('BetaGraphURL')}/teams"
                                                        },
                                                        "description": "Provision team from a Microsoft out of the box template e.g. SmallBusiness, Department etc."
                                                    },
                                                    "Set_TeamsTemplateOperation_variable_-_from_template": {
                                                        "runAfter": {},
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "TeamsTemplateOperation",
                                                            "value": "template"
                                                        }
                                                    }
                                                }
                                            },
                                               "expression": {
                                                "or": [
                                                    {
                                                        "equals": [
                                                            "@triggerBody()?['TemplateId']",
                                                            "standard"
                                                        ]
                                                    },
                                                    {
                                                        "equals": [
                                                            "@empty(triggerBody()?['TemplateId'])",
                                                            "@true"
                                                        ]
                                                    }
                                                ]
                                            },
                                             "type": "If",
                                            "description": "Check if template id is standard or blank (provision an empty team) - use the 1.0 graph endpoints and create a group first. Otherwise use the beta graph endpoints to provision an out of the box template."
                                            }
                                    },
                                    "runAfter": {},
                                    "else": {
                                        "actions": {
                                                   "Clone_team": {
                                            "runAfter": {
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                                    "clientId": "@body('Get_Client_ID')?['value']",
                                                        "secret": "@body('Get_Client_Secret')?['value']",
                                                    "tenant": "@variables('TenantID')",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "body": {
                                                    "classification": "@if(empty(triggerBody()?['Classification']),null,triggerBody()?['Classification'])",
                                                    "description": "@{triggerBody()?['TeamDescription']}",
                                                    "displayName": "@{triggerBody()?['Title']}",
                                                    "mailNickname": "@{triggerBody()?['TeamAlias']}",
                                                    "partsToClone": "apps,tabs,settings,channels",
                                                    "visibility": "@{triggerBody()?['Visibility']?['Value']}"
                                                },
                                                "headers": {
                                                    "content-type": "application/json"
                                                },
                                                "method": "POST",
                                                "uri": "@{variables('GraphURL')}/teams/@{triggerBody()?['TemplateId']}/clone"
                                            }
                                        },
                                        "Set_TeamsTemplateOperation_variable_-_clone_team": {
                                            "runAfter": {
                                                "Clone_team": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "TeamsTemplateOperation",
                                                "value": "clone"
                                            }
                                    }
                                        }
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "equals": [
                                                "@triggerBody()?['FirstPartyTemplate']",
                                                true
                                            ]
                                        }
                                    ]
                                },
                                "type": "If",
                                "description": "Check if the template is a first party (out of the box) template. If false, assume custom template and clone the team matching the specified template id."
                            },
                            "Set_ChannelID_variable": {
                                "runAfter": {
                                    "Set_TeamID_variable": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "SetVariable",
                                "inputs": {
                                    "name": "ChannelID",
                                        "value": "@{If(or(equals(variables('TeamsTemplateOperation'),'template'),equals(variables('TeamsTemplateOperation'),'clone')),body('Parse_created_team_JSON')?['internalId'],body('Parse_teamify_JSON')?['internalId'])}"
                                }
                            },
                            "Set_TeamID_variable": {
                                "runAfter": {
                                    "Check_TeamsTemplateOperation": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "SetVariable",
                                "inputs": {
                                    "name": "TeamID",
                                        "value": "@{If(or(equals(variables('TeamsTemplateOperation'),'template'),equals(variables('TeamsTemplateOperation'),'clone')),body('Parse_created_team_JSON')?['id'],body('Parse_teamify_JSON')?['id'])}"
                                }
                            },
                              "Set_TeamURL_variable": {
                                    "runAfter": {
                                        "Set_ChannelID_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "TeamURL",
                                        "value": "@{if(or(equals(variables('TeamsTemplateOperation'),'template'),equals(variables('TeamsTemplateOperation'),'clone')),body('Parse_created_team_JSON')?['webUrl'],body('Parse_teamify_JSON')?['webUrl'])}"
                                    }
                                }
                        },
                        "runAfter": {
                            "Loop_through_Members": [
                                "Succeeded"
                            ],
                            "Loop_through_Owners": [
                                "Succeeded"
                            ]
                        },
                        "type": "Scope"
                    },
                     "Get_Client_ID": {
                            "runAfter": {
                                "Initialize_TemplateVisibility_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('appid')}/value"
                            },
                            "description": "Get Azure ad app client id from key vault.",
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs",
                                        "outputs"
                                    ]
                                }
                            }
                        },
                            "Get_Client_Secret": {
                            "runAfter": {
                                "Get_Client_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('appsecret')}/value"
                            },
                            "description": "Get Azure ad app secret from key vault.",
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs",
                                        "outputs"
                                    ]
                                }
                            }
                        },
                    "Get_service_account_user_profile": {
                        "runAfter": {
                            "Get_Client_Secret": [
                                "Succeeded"
                            ]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['office365users']['connectionId']"
                                }
                            },
                            "method": "get",
                            "path": "/codeless/v1.0/users/@{encodeURIComponent(variables('ServiceAccountUPN'))}"
                        }
                    },
                                            "Initialize_BetaGraphURL_variable": {
                            "runAfter": {
                                "Initialize_GraphURL_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "BetaGraphURL",
                                        "type": "string",
                                        "value": "https://graph.microsoft.com/beta"
                                    }
                                ]
                            }
                        },
                    "Initialize_ChannelID_variable": {
                        "runAfter": {
                            "Initialize_TeamID_variable": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "ChannelID",
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    "Initialize_GraphURL_variable": {
                        "runAfter": {
                            "Initialize_TenantID_variable": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "GraphURL",
                                    "type": "String",
                                    "value": "https://graph.microsoft.com/v1.0"
                                }
                            ]
                        }
                    },
                    "Initialize_MembersRequestBody_variable": {
                        "runAfter": {
                            "Initialize_Members_variable": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "MembersRequestBody",
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    "Initialize_Members_variable": {
                        "runAfter": {
                            "Initialize_OwnersPrivateChannel_variable": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "Members",
                                    "type": "Array"
                                }
                            ]
                        }
                    },
                    "Initialize_OwnersPrivateChannel_variable": {
                        "runAfter": {
                            "Initialize_Owners_variable": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "OwnersPrivateChannel",
                                    "type": "array"
                                }
                            ]
                        }
                    },
                    "Initialize_Owners_variable": {
                        "runAfter": {
                            "Initialize_BetaGraphURL_variable": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "Owners",
                                    "type": "array"
                                }
                            ]
                        }
                    },
                    "Initialize_ServiceAccountUPN_variable": {
                        "runAfter": {
                            "Initialize_ChannelID_variable": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "ServiceAccountUPN",
                                    "type": "string",
                                    "value": "[parameters('serviceAccountUPN')]"
                                }
                            ]
                        }
                    },
                    "Initialize_SiteExists_variable": {
                        "runAfter": {
                            "Update_status_to_Team_Creation": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "SiteExists",
                                    "type": "Boolean",
                                    "value": "@false"
                                }
                            ]
                        }
                    },
                    "Initialize_TeamID_variable": {
                        "runAfter": {
                            "Initialize_TeamURL_variable": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "TeamID",
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    "Initialize_TeamURL_variable": {
                        "runAfter": {
                            "Initialize_TeamsTemplateOperation_variable": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "TeamURL",
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    "Initialize_TeamsTemplateOperation_variable": {
                        "runAfter": {
                            "Initialize_MembersRequestBody_variable": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "TeamsTemplateOperation",
                                    "type": "string"
                                }
                            ]
                        }
                    },
                         "Initialize_TemplateVisibility_variable": {
                            "runAfter": {
                                "Initialize_ServiceAccountUPN_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "TemplateVisibility",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                    "Initialize_TenantID_variable": {
                        "runAfter": {
                            "Initialize_SiteExists_variable": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "TenantID",
                                    "type": "String",
                                    "value": "[parameters('tenantId')]"
                                }
                            ]
                        }
                    },
                    "Loop_through_Members": {
                        "foreach": "@triggerBody()?['Members']",
                        "actions": {
                            "Append_to_Members_variable": {
                                "runAfter": {
                                    "Get_member_user_profile": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                    "name": "Members",
                                    "value": "https://graph.microsoft.com/v1.0/users/@{body('Get_member_user_profile')?['id']}"
                                }
                            },
                            "Get_member_user_profile": {
                                "runAfter": {
                                },
                                "type": "ApiConnection",
                                "inputs": {
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['office365users']['connectionId']"
                                        }
                                    },
                                    "method": "get",
                                    "path": "/codeless/v1.0/users/@{encodeURIComponent(items('Loop_through_Members')?['Email'])}",
                                    "uri": "@{variables('GraphURL')}/users/@{items('Loop_through_Members')?['Email']}"
                                }
                            }
                        },
                        "runAfter": {
                            "Check_if_SharePoint_site_exists": [
                                "Succeeded"
                            ]
                        },
                        "type": "Foreach"
                    },
                    "Loop_through_Owners": {
                        "foreach": "@triggerBody()?['Owners']",
                        "actions": {
                            "Append_Owners_to_Members_variable": {
                                "runAfter": {
                                    "Append_to_Owners_variable": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                    "name": "Members",
                                    "value": "https://graph.microsoft.com/v1.0/users/@{body('Get_owner_user_profile')?['id']}"
                                },
                                "description": "Due to a bug when provisioning Teams via the MS Graph (owners cannot create Planner plans), owners must be added as members first."
                            },
                            "Append_to_Owners_variable": {
                                "runAfter": {
                                    "Get_owner_user_profile": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                    "name": "Owners",
                                    "value": "https://graph.microsoft.com/v1.0/users/@{body('Get_owner_user_profile')?['id']}"
                                }
                            },
                            "Get_owner_user_profile": {
                                "runAfter": {
                                },
                                "type": "ApiConnection",
                                "inputs": {
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['office365users']['connectionId']"
                                        }
                                    },
                                    "method": "get",
                                    "path": "/codeless/v1.0/users/@{encodeURIComponent(items('Loop_through_Owners')?['Email'])}"
                                }
                            }
                        },
                        "runAfter": {
                            "Check_if_SharePoint_site_exists": [
                                "Succeeded"
                            ]
                        },
                        "type": "Foreach"
                    },
                            "Post_welcome_message_to_general_channel": {
                                "runAfter": {
                                    "Create_team": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ApiConnection",
                                "inputs": {
                                    "body": {
                                        "body": {
                                            "content": "<p><span style=\"font-size: 16px\"><strong>Welcome to your new Team<br>\n<br>\n</strong></span>This team was created by the Request-a-Team app.<br>\n<br>\nYour team is now ready for use, you can now start adding Members, Owners, posting channel messages and lots more.<br>\n<br>\nFor helpful tips on getting started with Microsoft Teams please visit the <a href=\"https://support.office.com/en-sg/teams\">help center</a> .</p>",
                                            "contentType": "html"
                                        }
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['teams']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/v3/beta/teams/@{encodeURIComponent(variables('TeamID'))}/channels/@{encodeURIComponent(variables('ChannelID'))}/messages"
                                }
                            },
                            "Remove_service_account_from_group": {
                                "runAfter": {
                                    "Post_welcome_message_to_general_channel": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http",
                                "inputs": {
                                    "authentication": {
                                        "audience": "https://graph.microsoft.com",
                                     "clientId": "@body('Get_Client_ID')?['value']",
                                    "secret": "@body('Get_Client_Secret')?['value']",
                                        "tenant": "@variables('TenantID')",
                                        "type": "ActiveDirectoryOAuth"
                                    },
                                    "method": "DELETE",
                                    "uri": "@{variables('GraphURL')}/groups/@{variables('TeamID')}/owners/@{body('Get_service_account_user_profile')?['id']}/$ref"
                                }
                            },
                    "Send_team_created_email": {
                        "runAfter": {
                            "Remove_service_account_from_group": [
                                "Succeeded"
                            ]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                            "body": {
                                "Body": "<!doctype html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\">\n    <head>\n        <!-- NAME: 1 COLUMN -->\n        <!--[if gte mso 15]>\n        <xml>\n            <o:OfficeDocumentSettings>\n            <o:AllowPNG/>\n            <o:PixelsPerInch>96</o:PixelsPerInch>\n            </o:OfficeDocumentSettings>\n        </xml>\n        <![endif]-->\n        <meta charset=\"UTF-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <title>Area Created</title>\n        \n    <style type=\"text/css\">\n\t\tp{\n\t\t\tmargin:10px 0;\n\t\t\tpadding:0;\n\t\t}\n\t\ttable{\n\t\t\tborder-collapse:collapse;\n\t\t}\n\t\th1,h2,h3,h4,h5,h6{\n\t\t\tdisplay:block;\n\t\t\tmargin:0;\n\t\t\tpadding:0;\n\t\t}\n\t\timg,a img{\n\t\t\tborder:0;\n\t\t\theight:auto;\n\t\t\toutline:none;\n\t\t\ttext-decoration:none;\n\t\t}\n\t\tbody,#bodyTable,#bodyCell{\n\t\t\theight:100%;\n\t\t\tmargin:0;\n\t\t\tpadding:0;\n\t\t\twidth:100%;\n\t\t}\n\t\t.mcnPreviewText{\n\t\t\tdisplay:none !important;\n\t\t}\n\t\t#outlook a{\n\t\t\tpadding:0;\n\t\t}\n\t\timg{\n\t\t\t-ms-interpolation-mode:bicubic;\n\t\t}\n\t\ttable{\n\t\t\tmso-table-lspace:0pt;\n\t\t\tmso-table-rspace:0pt;\n\t\t}\n\t\t.ReadMsgBody{\n\t\t\twidth:100%;\n\t\t}\n\t\t.ExternalClass{\n\t\t\twidth:100%;\n\t\t}\n\t\tp,a,li,td,blockquote{\n\t\t\tmso-line-height-rule:exactly;\n\t\t}\n\t\ta[href^=tel],a[href^=sms]{\n\t\t\tcolor:inherit;\n\t\t\tcursor:default;\n\t\t\ttext-decoration:none;\n\t\t}\n\t\tp,a,li,td,body,table,blockquote{\n\t\t\t-ms-text-size-adjust:100%;\n\t\t\t-webkit-text-size-adjust:100%;\n\t\t}\n\t\t.ExternalClass,.ExternalClass p,.ExternalClass td,.ExternalClass div,.ExternalClass span,.ExternalClass font{\n\t\t\tline-height:100%;\n\t\t}\n\t\ta[x-apple-data-detectors]{\n\t\t\tcolor:inherit !important;\n\t\t\ttext-decoration:none !important;\n\t\t\tfont-size:inherit !important;\n\t\t\tfont-family:inherit !important;\n\t\t\tfont-weight:inherit !important;\n\t\t\tline-height:inherit !important;\n\t\t}\n\t\t#bodyCell{\n\t\t\tpadding:10px;\n\t\t}\n\t\t.templateContainer{\n\t\t\tmax-width:600px !important;\n\t\t}\n\t\ta.mcnButton{\n\t\t\tdisplay:block;\n\t\t}\n\t\t.mcnImage,.mcnRetinaImage{\n\t\t\tvertical-align:bottom;\n\t\t}\n\t\t.mcnTextContent{\n\t\t\tword-break:break-word;\n\t\t}\n\t\t.mcnTextContent img{\n\t\t\theight:auto !important;\n\t\t}\n\t\t.mcnDividerBlock{\n\t\t\ttable-layout:fixed !important;\n\t\t}\n\t/*\n\t@tab Page\n\t@section Background Style\n\t@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.\n\t*/\n\t\tbody,#bodyTable{\n\t\t\t/*@editable*/background-color:#FAFAFA;\n\t\t}\n\t/*\n\t@tab Page\n\t@section Background Style\n\t@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.\n\t*/\n\t\t#bodyCell{\n\t\t\t/*@editable*/border-top:0;\n\t\t}\n\t/*\n\t@tab Page\n\t@section Email Border\n\t@tip Set the border for your email.\n\t*/\n\t\t.templateContainer{\n\t\t\t/*@editable*/border:0;\n\t\t}\n\t/*\n\t@tab Page\n\t@section Heading 1\n\t@tip Set the styling for all first-level headings in your emails. These should be the largest of your headings.\n\t@style heading 1\n\t*/\n\t\th1{\n\t\t\t/*@editable*/color:#202020;\n\t\t\t/*@editable*/font-family:Helvetica;\n\t\t\t/*@editable*/font-size:26px;\n\t\t\t/*@editable*/font-style:normal;\n\t\t\t/*@editable*/font-weight:bold;\n\t\t\t/*@editable*/line-height:125%;\n\t\t\t/*@editable*/letter-spacing:normal;\n\t\t\t/*@editable*/text-align:left;\n\t\t}\n\t/*\n\t@tab Page\n\t@section Heading 2\n\t@tip Set the styling for all second-level headings in your emails.\n\t@style heading 2\n\t*/\n\t\th2{\n\t\t\t/*@editable*/color:#202020;\n\t\t\t/*@editable*/font-family:Helvetica;\n\t\t\t/*@editable*/font-size:22px;\n\t\t\t/*@editable*/font-style:normal;\n\t\t\t/*@editable*/font-weight:bold;\n\t\t\t/*@editable*/line-height:125%;\n\t\t\t/*@editable*/letter-spacing:normal;\n\t\t\t/*@editable*/text-align:left;\n\t\t}\n\t/*\n\t@tab Page\n\t@section Heading 3\n\t@tip Set the styling for all third-level headings in your emails.\n\t@style heading 3\n\t*/\n\t\th3{\n\t\t\t/*@editable*/color:#202020;\n\t\t\t/*@editable*/font-family:Helvetica;\n\t\t\t/*@editable*/font-size:20px;\n\t\t\t/*@editable*/font-style:normal;\n\t\t\t/*@editable*/font-weight:bold;\n\t\t\t/*@editable*/line-height:125%;\n\t\t\t/*@editable*/letter-spacing:normal;\n\t\t\t/*@editable*/text-align:left;\n\t\t}\n\t/*\n\t@tab Page\n\t@section Heading 4\n\t@tip Set the styling for all fourth-level headings in your emails. These should be the smallest of your headings.\n\t@style heading 4\n\t*/\n\t\th4{\n\t\t\t/*@editable*/color:#202020;\n\t\t\t/*@editable*/font-family:Helvetica;\n\t\t\t/*@editable*/font-size:18px;\n\t\t\t/*@editable*/font-style:normal;\n\t\t\t/*@editable*/font-weight:bold;\n\t\t\t/*@editable*/line-height:125%;\n\t\t\t/*@editable*/letter-spacing:normal;\n\t\t\t/*@editable*/text-align:left;\n\t\t}\n\t/*\n\t@tab Preheader\n\t@section Preheader Style\n\t@tip Set the background color and borders for your email's preheader area.\n\t*/\n\t\t#templatePreheader{\n\t\t\t/*@editable*/background-color:#FAFAFA;\n\t\t\t/*@editable*/background-image:none;\n\t\t\t/*@editable*/background-repeat:no-repeat;\n\t\t\t/*@editable*/background-position:center;\n\t\t\t/*@editable*/background-size:cover;\n\t\t\t/*@editable*/border-top:0;\n\t\t\t/*@editable*/border-bottom:0;\n\t\t\t/*@editable*/padding-top:9px;\n\t\t\t/*@editable*/padding-bottom:9px;\n\t\t}\n\t/*\n\t@tab Preheader\n\t@section Preheader Text\n\t@tip Set the styling for your email's preheader text. Choose a size and color that is easy to read.\n\t*/\n\t\t#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{\n\t\t\t/*@editable*/color:#656565;\n\t\t\t/*@editable*/font-family:Helvetica;\n\t\t\t/*@editable*/font-size:12px;\n\t\t\t/*@editable*/line-height:150%;\n\t\t\t/*@editable*/text-align:left;\n\t\t}\n\t/*\n\t@tab Preheader\n\t@section Preheader Link\n\t@tip Set the styling for your email's preheader links. Choose a color that helps them stand out from your text.\n\t*/\n\t\t#templatePreheader .mcnTextContent a,#templatePreheader .mcnTextContent p a{\n\t\t\t/*@editable*/color:#656565;\n\t\t\t/*@editable*/font-weight:normal;\n\t\t\t/*@editable*/text-decoration:underline;\n\t\t}\n\t/*\n\t@tab Header\n\t@section Header Style\n\t@tip Set the background color and borders for your email's header area.\n\t*/\n\t\t#templateHeader{\n\t\t\t/*@editable*/background-color:#FFFFFF;\n\t\t\t/*@editable*/background-image:none;\n\t\t\t/*@editable*/background-repeat:no-repeat;\n\t\t\t/*@editable*/background-position:center;\n\t\t\t/*@editable*/background-size:cover;\n\t\t\t/*@editable*/border-top:0;\n\t\t\t/*@editable*/border-bottom:0;\n\t\t\t/*@editable*/padding-top:9px;\n\t\t\t/*@editable*/padding-bottom:0;\n\t\t}\n\t/*\n\t@tab Header\n\t@section Header Text\n\t@tip Set the styling for your email's header text. Choose a size and color that is easy to read.\n\t*/\n\t\t#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{\n\t\t\t/*@editable*/color:#202020;\n\t\t\t/*@editable*/font-family:Helvetica;\n\t\t\t/*@editable*/font-size:16px;\n\t\t\t/*@editable*/line-height:150%;\n\t\t\t/*@editable*/text-align:left;\n\t\t}\n\t/*\n\t@tab Header\n\t@section Header Link\n\t@tip Set the styling for your email's header links. Choose a color that helps them stand out from your text.\n\t*/\n\t\t#templateHeader .mcnTextContent a,#templateHeader .mcnTextContent p a{\n\t\t\t/*@editable*/color:#007C89;\n\t\t\t/*@editable*/font-weight:normal;\n\t\t\t/*@editable*/text-decoration:underline;\n\t\t}\n\t/*\n\t@tab Body\n\t@section Body Style\n\t@tip Set the background color and borders for your email's body area.\n\t*/\n\t\t#templateBody{\n\t\t\t/*@editable*/background-color:#FFFFFF;\n\t\t\t/*@editable*/background-image:none;\n\t\t\t/*@editable*/background-repeat:no-repeat;\n\t\t\t/*@editable*/background-position:center;\n\t\t\t/*@editable*/background-size:cover;\n\t\t\t/*@editable*/border-top:0;\n\t\t\t/*@editable*/border-bottom:2px solid #EAEAEA;\n\t\t\t/*@editable*/padding-top:0;\n\t\t\t/*@editable*/padding-bottom:9px;\n\t\t}\n\t/*\n\t@tab Body\n\t@section Body Text\n\t@tip Set the styling for your email's body text. Choose a size and color that is easy to read.\n\t*/\n\t\t#templateBody .mcnTextContent,#templateBody .mcnTextContent p{\n\t\t\t/*@editable*/color:#202020;\n\t\t\t/*@editable*/font-family:Helvetica;\n\t\t\t/*@editable*/font-size:16px;\n\t\t\t/*@editable*/line-height:150%;\n\t\t\t/*@editable*/text-align:left;\n\t\t}\n\t/*\n\t@tab Body\n\t@section Body Link\n\t@tip Set the styling for your email's body links. Choose a color that helps them stand out from your text.\n\t*/\n\t\t#templateBody .mcnTextContent a,#templateBody .mcnTextContent p a{\n\t\t\t/*@editable*/color:#007C89;\n\t\t\t/*@editable*/font-weight:normal;\n\t\t\t/*@editable*/text-decoration:underline;\n\t\t}\n\t/*\n\t@tab Footer\n\t@section Footer Style\n\t@tip Set the background color and borders for your email's footer area.\n\t*/\n\t\t#templateFooter{\n\t\t\t/*@editable*/background-color:#ffffff;\n\t\t\t/*@editable*/background-image:none;\n\t\t\t/*@editable*/background-repeat:no-repeat;\n\t\t\t/*@editable*/background-position:center;\n\t\t\t/*@editable*/background-size:cover;\n\t\t\t/*@editable*/border-top:0;\n\t\t\t/*@editable*/border-bottom:0;\n\t\t\t/*@editable*/padding-top:9px;\n\t\t\t/*@editable*/padding-bottom:9px;\n\t\t}\n\t/*\n\t@tab Footer\n\t@section Footer Text\n\t@tip Set the styling for your email's footer text. Choose a size and color that is easy to read.\n\t*/\n\t\t#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{\n\t\t\t/*@editable*/color:#e74d4d;\n\t\t\t/*@editable*/font-family:Helvetica;\n\t\t\t/*@editable*/font-size:12px;\n\t\t\t/*@editable*/line-height:150%;\n\t\t\t/*@editable*/text-align:center;\n\t\t}\n\t/*\n\t@tab Footer\n\t@section Footer Link\n\t@tip Set the styling for your email's footer links. Choose a color that helps them stand out from your text.\n\t*/\n\t\t#templateFooter .mcnTextContent a,#templateFooter .mcnTextContent p a{\n\t\t\t/*@editable*/color:#656565;\n\t\t\t/*@editable*/font-weight:normal;\n\t\t\t/*@editable*/text-decoration:underline;\n\t\t}\n\t@media only screen and (min-width:768px){\n\t\t.templateContainer{\n\t\t\twidth:600px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\tbody,table,td,p,a,li,blockquote{\n\t\t\t-webkit-text-size-adjust:none !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\tbody{\n\t\t\twidth:100% !important;\n\t\t\tmin-width:100% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t#bodyCell{\n\t\t\tpadding-top:10px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnRetinaImage{\n\t\t\tmax-width:100% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImage{\n\t\t\twidth:100% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnCartContainer,.mcnCaptionTopContent,.mcnRecContentContainer,.mcnCaptionBottomContent,.mcnTextContentContainer,.mcnBoxedTextContentContainer,.mcnImageGroupContentContainer,.mcnCaptionLeftTextContentContainer,.mcnCaptionRightTextContentContainer,.mcnCaptionLeftImageContentContainer,.mcnCaptionRightImageContentContainer,.mcnImageCardLeftTextContentContainer,.mcnImageCardRightTextContentContainer,.mcnImageCardLeftImageContentContainer,.mcnImageCardRightImageContentContainer{\n\t\t\tmax-width:100% !important;\n\t\t\twidth:100% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnBoxedTextContentContainer{\n\t\t\tmin-width:100% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImageGroupContent{\n\t\t\tpadding:9px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnCaptionLeftContentOuter .mcnTextContent,.mcnCaptionRightContentOuter .mcnTextContent{\n\t\t\tpadding-top:9px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImageCardTopImageContent,.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent,.mcnCaptionBlockInner .mcnCaptionTopContent:last-child .mcnTextContent{\n\t\t\tpadding-top:18px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImageCardBottomImageContent{\n\t\t\tpadding-bottom:9px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImageGroupBlockInner{\n\t\t\tpadding-top:0 !important;\n\t\t\tpadding-bottom:0 !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImageGroupBlockOuter{\n\t\t\tpadding-top:9px !important;\n\t\t\tpadding-bottom:9px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnTextContent,.mcnBoxedTextContentColumn{\n\t\t\tpadding-right:18px !important;\n\t\t\tpadding-left:18px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImageCardLeftImageContent,.mcnImageCardRightImageContent{\n\t\t\tpadding-right:18px !important;\n\t\t\tpadding-bottom:0 !important;\n\t\t\tpadding-left:18px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcpreview-image-uploader{\n\t\t\tdisplay:none !important;\n\t\t\twidth:100% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Heading 1\n\t@tip Make the first-level headings larger in size for better readability on small screens.\n\t*/\n\t\th1{\n\t\t\t/*@editable*/font-size:22px !important;\n\t\t\t/*@editable*/line-height:125% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Heading 2\n\t@tip Make the second-level headings larger in size for better readability on small screens.\n\t*/\n\t\th2{\n\t\t\t/*@editable*/font-size:20px !important;\n\t\t\t/*@editable*/line-height:125% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Heading 3\n\t@tip Make the third-level headings larger in size for better readability on small screens.\n\t*/\n\t\th3{\n\t\t\t/*@editable*/font-size:18px !important;\n\t\t\t/*@editable*/line-height:125% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Heading 4\n\t@tip Make the fourth-level headings larger in size for better readability on small screens.\n\t*/\n\t\th4{\n\t\t\t/*@editable*/font-size:16px !important;\n\t\t\t/*@editable*/line-height:150% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Boxed Text\n\t@tip Make the boxed text larger in size for better readability on small screens. We recommend a font size of at least 16px.\n\t*/\n\t\t.mcnBoxedTextContentContainer .mcnTextContent,.mcnBoxedTextContentContainer .mcnTextContent p{\n\t\t\t/*@editable*/font-size:14px !important;\n\t\t\t/*@editable*/line-height:150% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Preheader Visibility\n\t@tip Set the visibility of the email's preheader on small screens. You can hide it to save space.\n\t*/\n\t\t#templatePreheader{\n\t\t\t/*@editable*/display:block !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Preheader Text\n\t@tip Make the preheader text larger in size for better readability on small screens.\n\t*/\n\t\t#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{\n\t\t\t/*@editable*/font-size:14px !important;\n\t\t\t/*@editable*/line-height:150% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Header Text\n\t@tip Make the header text larger in size for better readability on small screens.\n\t*/\n\t\t#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{\n\t\t\t/*@editable*/font-size:16px !important;\n\t\t\t/*@editable*/line-height:150% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Body Text\n\t@tip Make the body text larger in size for better readability on small screens. We recommend a font size of at least 16px.\n\t*/\n\t\t#templateBody .mcnTextContent,#templateBody .mcnTextContent p{\n\t\t\t/*@editable*/font-size:16px !important;\n\t\t\t/*@editable*/line-height:150% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Footer Text\n\t@tip Make the footer content text larger in size for better readability on small screens.\n\t*/\n\t\t#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{\n\t\t\t/*@editable*/font-size:14px !important;\n\t\t\t/*@editable*/line-height:150% !important;\n\t\t}\n\n}</style></head>\n    <body>\n        <!--*|IF:MC_PREVIEW_TEXT|*-->\n        <!--[if !gte mso 9]><!----><span class=\"mcnPreviewText\" style=\"display:none; font-size:0px; line-height:0px; max-height:0px; max-width:0px; opacity:0; overflow:hidden; visibility:hidden; mso-hide:all;\">Team reated</span><!--<![endif]-->\n        <!--*|END:IF|*-->\n        <center>\n            <table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" height=\"100%\" width=\"100%\" id=\"bodyTable\">\n                <tr>\n                    <td align=\"center\" valign=\"top\" id=\"bodyCell\">\n                        <!-- BEGIN TEMPLATE // -->\n                        <!--[if (gte mso 9)|(IE)]>\n                        <table align=\"center\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"600\" style=\"width:600px;\">\n                        <tr>\n                        <td align=\"center\" valign=\"top\" width=\"600\" style=\"width:600px;\">\n                        <![endif]-->\n                        <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"templateContainer\">\n                            <tr>\n                                <td valign=\"top\" id=\"templatePreheader\"><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnTextBlock\" style=\"min-width:100%;\">\n    <tbody class=\"mcnTextBlockOuter\">\n        <tr>\n            <td valign=\"top\" class=\"mcnTextBlockInner\" style=\"padding-top:9px;\">\n              \t<!--[if mso]>\n\t\t\t\t<table align=\"left\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\" style=\"width:100%;\">\n\t\t\t\t<tr>\n\t\t\t\t<![endif]-->\n\t\t\t    \n\t\t\t\t<!--[if mso]>\n\t\t\t\t<td valign=\"top\" width=\"600\" style=\"width:600px;\">\n\t\t\t\t<![endif]-->\n\t\t\t\t<!--[if mso]>\n\t\t\t\t</td>\n\t\t\t\t<![endif]-->\n                \n\t\t\t\t<!--[if mso]>\n\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<![endif]-->\n            </td>\n        </tr>\n    </tbody>\n</table></td>\n                            </tr>\n                            <tr>\n                                <td valign=\"top\" id=\"templateHeader\"><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnImageBlock\" style=\"min-width:100%;\">                       \n</table><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnBoxedTextBlock\" style=\"min-width:100%;\">\n    <!--[if gte mso 9]>\n\t<table align=\"center\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">\n\t<![endif]-->\n\t<tbody class=\"mcnBoxedTextBlockOuter\">\n        <tr>\n            <td valign=\"top\" class=\"mcnBoxedTextBlockInner\">\n                \n\t\t\t\t<!--[if gte mso 9]>\n\t\t\t\t<td align=\"center\" valign=\"top\" \">\n\t\t\t\t<![endif]-->\n                <table align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"min-width:100%;\" class=\"mcnBoxedTextContentContainer\">\n                    <tbody><tr>\n                        \n                        <td style=\"padding-top:9px; padding-left:18px; padding-bottom:9px; padding-right:18px;\">\n                        \n                            <table border=\"0\" cellspacing=\"0\" class=\"mcnTextContentContainer\" width=\"100%\" style=\"min-width: 100% !important;background-color:#6264a7\">\n                                <tbody><tr>\n                                    <td valign=\"top\" class=\"mcnTextContent\" style=\"padding: 18px;color: #F2F2F2;font-family: Helvetica;font-size: 14px;font-weight: normal;text-align: center;\">\n                                        <h2 class=\"null\" style=\"text-align: center;\"><font color=\"#ffffff\">Microsoft Teams Request</font></h2>\n\n                                    </td>\n                                </tr>\n                            </tbody></table>\n                        </td>\n                    </tr>\n                </tbody></table>\n\t\t\t\t<!--[if gte mso 9]>\n\t\t\t\t</td>\n\t\t\t\t<![endif]-->\n                \n\t\t\t\t<!--[if gte mso 9]>\n                </tr>\n                </table>\n\t\t\t\t<![endif]-->\n            </td>\n        </tr>\n    </tbody>\n</table><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnBoxedTextBlock\" style=\"min-width:100%;\">\n    <!--[if gte mso 9]>\n\t<table align=\"center\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">\n\t<![endif]-->\n\t<tbody class=\"mcnBoxedTextBlockOuter\">\n        <tr>\n            <td valign=\"top\" class=\"mcnBoxedTextBlockInner\">\n                \n\t\t\t\t<!--[if gte mso 9]>\n\t\t\t\t<td align=\"center\" valign=\"top\" \">\n\t\t\t\t<![endif]-->\n                <table align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"min-width:100%;\" class=\"mcnBoxedTextContentContainer\">\n                    <tbody><tr>\n                        \n                        <td style=\"padding-top:9px; padding-left:18px; padding-bottom:9px; padding-right:18px;\">\n                        \n                            <table border=\"0\" cellspacing=\"0\" class=\"mcnTextContentContainer\" width=\"100%\" style=\"min-width:100% !important;\">\n                                <tbody><tr>\n                                    <td valign=\"top\" class=\"mcnTextContent\" style=\"padding: 18px;color: #000000;font-family: Helvetica;font-size: 14px;font-weight: normal;text-align: center;\">\n                                        <span style=\"font-size:19px\"><strong>Team Created - @{triggerBody()?['Title']}</strong></span><br>\n<br>\nYour Team has been created and is now ready for use.<br><br>\nClick <a href=\"@{variables('TeamURL')}\">here</a> to access it. \n<br><br>\nEnjoy collaborating!\n\n                                </td>\n                                </tr>\n                            </tbody></table>\n                        </td>\n                    </tr>\n                </tbody></table>\n\t\t\t\t<!--[if gte mso 9]>\n\t\t\t\t</td>\n\t\t\t\t<![endif]-->\n                \n\t\t\t\t<!--[if gte mso 9]>\n                </tr>\n                </table>\n\t\t\t\t<![endif]-->\n            </td>\n        </tr>\n    </tbody>\n</table></td>\n                            </tr>\n                  \n                         \n                        </table>\n                        <!--[if (gte mso 9)|(IE)]>\n                        </td>\n                        </tr>\n                        </table>\n                        <![endif]-->\n                        <!-- // END TEMPLATE -->\n                    </td>\n                </tr>\n            </table>\n        </center>\n    </body>\n</html>",
                                "IsHtml": true,
                                "Subject": "Request-a-Team - Team Created",
                                "To": "@triggerBody()?['Author']?['Email']"
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['office365']['connectionId']"
                                }
                            },
                            "method": "post",
                            "path": "/Mail"
                        }
                    },
                    
                    "Update_status_to_Team_Created": {
                        "runAfter": {
                            "Send_team_created_email": [
                                "Succeeded"
                            ]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                            "body": {
                                "Status": {
                                    "Value": "Team Created"
                                },
                                    "TeamURL": "@variables('TeamURL')",
                                "Title": "@triggerBody()?['Title']"
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                }
                            },
                            "method": "patch",
                            "path": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(',variables('singlequote'),parameters('requestsSiteUrl'),variables('singlequote'),'))}/tables/@{encodeURIComponent(encodeURIComponent(',variables('singlequote'),parameters('requestsListId'),variables('singlequote'),'))}/items/@{encodeURIComponent(triggerBody()?[',variables('singlequote'),'ID',variables('singlequote'),'])}')]"
                        }
                    },
                    "Update_status_to_Team_Creation": {
                        "runAfter": {
                        },
                        "type": "ApiConnection",
                        "inputs": {
                            "body": {
                                "Status": {
                                    "Value": "Team Creation"
                                },
                                "Title": "@triggerBody()?['Title']"
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                }
                            },
                            "method": "patch",
                            "path": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(',variables('singlequote'),parameters('requestsSiteUrl'),variables('singlequote'),'))}/tables/@{encodeURIComponent(encodeURIComponent(',variables('singlequote'),parameters('requestsListId'),variables('singlequote'),'))}/items/@{encodeURIComponent(triggerBody()?[',variables('singlequote'),'ID',variables('singlequote'),'])}')]"
                        }
                    }
                },
                "outputs": {
                }
            },
            "parameters": {
                "$connections": {
                    "value": {
                        "azureautomation": {
                            "connectionId": "[concat('/subscriptions/',parameters('subscriptionId'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Web/connections/teamsautomate-automation')]",
                            "connectionName": "teamsautomate-automation",
                            "id": "[concat('/subscriptions/',parameters('subscriptionId'),'/providers/Microsoft.Web/locations/',parameters('location'),'/managedApis/azureautomation')]"
                        },
                           "keyvault": {
                            "connectionId": "[concat('/subscriptions/',parameters('subscriptionId'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Web/connections/teamsautomate-kv')]",
                                "connectionName": "keyvault",
                                 "id": "[concat('/subscriptions/',parameters('subscriptionId'),'/providers/Microsoft.Web/locations/',parameters('location'),'/managedApis/keyvault')]"
                            },
                        "office365": {
                            "connectionId": "[concat('/subscriptions/',parameters('subscriptionId'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Web/connections/teamsautomate-o365outlook')]",
                            "connectionName": "teamsautomate-o365outlook",
                            "id": "[concat('/subscriptions/',parameters('subscriptionId'),'/providers/Microsoft.Web/locations/',parameters('location'),'/managedApis/office365')]"
                        },
                        "office365users": {
                            "connectionId": "[concat('/subscriptions/',parameters('subscriptionId'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Web/connections/teamsautomate-o365users')]",
                            "connectionName": "teamsautomate-o365users",
                            "id": "[concat('/subscriptions/',parameters('subscriptionId'),'/providers/Microsoft.Web/locations/',parameters('location'),'/managedApis/office365users')]"
                        },
                        "sharepointonline": {
                            "connectionId": "[concat('/subscriptions/',parameters('subscriptionId'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Web/connections/teamsautomate-spo')]",
                            "connectionName": "teamsautomate-spo",
                            "id": "[concat('/subscriptions/',parameters('subscriptionId'),'/providers/Microsoft.Web/locations/',parameters('location'),'/managedApis/sharepointonline')]"
                        },
                        "teams": {
                            "connectionId": "[concat('/subscriptions/',parameters('subscriptionId'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Web/connections/teamsautomate-teams')]",
                            "connectionName": "teamsautomate-teams",
                            "id": "[concat('/subscriptions/',parameters('subscriptionId'),'/providers/Microsoft.Web/locations/',parameters('location'),'/managedApis/teams')]"
                        }
                    }
                }
            }
        }
} ] }
